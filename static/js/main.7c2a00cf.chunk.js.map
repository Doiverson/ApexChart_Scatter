{"version":3,"sources":["Scatter.js","App.js","reportWebVitals.js","index.js"],"names":["ApexChart","props","state","series","name","data","options","chart","height","type","animations","enabled","zoom","toolbar","show","colors","xaxis","tickAmount","min","max","yaxis","markers","size","fill","opacity","image","src","width","legend","labels","useSeriesColors","customHTML","id","this","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CAETC,OAAQ,CAAC,CACLC,KAAM,SACNC,KAAM,CACF,CAAC,KAAM,KACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,GAAI,GACL,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,KAAM,IACP,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,KAAM,GACP,CAAC,IAAK,KACN,CAAC,GAAI,IACL,CAAC,KAAM,IACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,MACP,CAAC,KAAM,IACP,CAAC,KAAM,KAEZ,CACCD,KAAM,SACNC,KAAM,CACF,CAAC,IAAK,KACN,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,EAAG,GACJ,CAAC,KAAM,IACP,CAAC,KAAM,GACP,CAAC,KAAM,KACP,CAAC,IAAK,IACN,CAAC,KAAM,OAGfC,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRC,KAAM,UACNC,WAAY,CACRC,SAAS,GAEbC,KAAM,CACFD,SAAS,GAEbE,QAAS,CACLC,MAAM,IAGdC,OAAQ,CAAC,UAAW,WACpBC,MAAO,CACHC,WAAY,GACZC,IAAK,EACLC,IAAK,IAETC,MAAO,CACHH,WAAY,GAEhBI,QAAS,CACLC,KAAM,IAEVC,KAAM,CACFd,KAAM,QACNe,QAAS,EACTC,MAAO,CACHC,IAAK,CACD,wEACA,kHAEJC,MAAO,GACPnB,OAAQ,KAShBoB,OAAQ,CACJC,OAAQ,CACJC,iBAAiB,GAErBT,QAAS,CACLU,WAAY,CACR,WACI,MAAO,IACR,WACC,MAAO,SArGhB,E,qDAiHf,OAGI,qBAAKC,GAAG,QAAR,SACI,cAAC,IAAD,CAAgB1B,QAAS2B,KAAK/B,MAAMI,QAASH,OAAQ8B,KAAK/B,MAAMC,OAAQM,KAAK,UAAUD,OAAQ,Y,GAtHxE0B,IAAMC,W,MCS9BC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c2a00cf.chunk.js","sourcesContent":["import React from 'react';\nimport ReactApexChart from \"react-apexcharts\";\n\nexport default class ApexChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            series: [{\n                name: 'Disney',\n                data: [\n                    [16.4, 5.4],\n                    [21.7, 4],\n                    [25.4, 3],\n                    [19, 2],\n                    [10.9, 1],\n                    [13.6, 3.2],\n                    [10.9, 7],\n                    [10.9, 8.2],\n                    [16.4, 4],\n                    [13.6, 4.3],\n                    [13.6, 12],\n                    [29.9, 3],\n                    [10.9, 5.2],\n                    [16.4, 6.5],\n                    [10.9, 8],\n                    [24.5, 7.1],\n                    [10.9, 7],\n                    [8.1, 4.7],\n                    [19, 10],\n                    [27.1, 10],\n                    [24.5, 8],\n                    [27.1, 3],\n                    [29.9, 11.5],\n                    [27.1, 0.8],\n                    [22.1, 2]\n                ]\n            }, {\n                name: 'Google',\n                data: [\n                    [6.4, 5.4],\n                    [11.7, 4],\n                    [15.4, 3],\n                    [9, 2],\n                    [10.9, 11],\n                    [20.9, 7],\n                    [12.9, 8.2],\n                    [6.4, 14],\n                    [11.6, 12]\n                ]\n            }],\n            options: {\n                chart: {\n                    height: 500,\n                    type: 'scatter',\n                    animations: {\n                        enabled: true,\n                    },\n                    zoom: {\n                        enabled: true,\n                    },\n                    toolbar: {\n                        show: false\n                    }\n                },\n                colors: ['#056BF6', '#D2376A'],\n                xaxis: {\n                    tickAmount: 10,\n                    min: 0,\n                    max: 40\n                },\n                yaxis: {\n                    tickAmount: 7\n                },\n                markers: {\n                    size: 15\n                },\n                fill: {\n                    type: 'image',\n                    opacity: 1,\n                    image: {\n                        src: [\n                            \"https://logos-download.com/wp-content/uploads/2016/06/Disney_logo.png\",\n                            \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/1280px-Google_2015_logo.svg.png\"\n                        ],\n                        width: 30,\n                        height: 30\n                    },\n                    // pattern: {\n                    //     style: 'squares',\n                    //     width: 180,\n                    //     height: 180,\n                    //     strokeWidth: 0\n                    // },\n                },\n                legend: {\n                    labels: {\n                        useSeriesColors: true\n                    },\n                    markers: {\n                        customHTML: [\n                            function () {\n                                return ''\n                            }, function () {\n                                return ''\n                            }\n                        ]\n                    }\n                }\n            },\n\n\n        };\n    }\n\n    render() {\n        return (\n\n\n            <div id=\"chart\">\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"scatter\" height={350} />\n            </div>\n\n\n        );\n    }\n}\n","import Scatter from './Scatter';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Scatter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}